#!/bin/bash

WORKSPACE=$(cd $(dirname $0)/; pwd)
cd $WORKSPACE

mkdir -p var

app=gfs
conf=config.yml
pidfile=var/app.pid
logfile=var/app.log

function check_pid() {
    if [ -f $pidfile ];then
        pid=`cat $pidfile`
        if [ -n $pid ]; then
            running=`ps -p $pid|grep -v "PID TTY" |wc -l`
            return $running
        fi
    fi
    return 0
}

function start() {
    check_pid
    running=$?
    if [ $running -gt 0 ];then
        echo -n "$app now is running already, pid="
        cat $pidfile
        return 1
    fi

    nohup ./$app --conf $conf &> $logfile &
    echo $! > $pidfile
    echo "$app started..., pid=$!"
}

function stop() {
    pid=`cat $pidfile`
    kill -9 $pid
    pkill $app
    echo "$app stoped..."
}

function restart() {

    stop
    sleep 1
    start
}

function status() {
    check_pid
    running=$?
    if [ $running -gt 0 ];then
        echo -n "$app now is running, pid="
        cat $pidfile
    else
        echo "$app is stoped"
    fi
}

function tailf() {
    tail -f $logfile
}

function build() {
    go-bindata-assetfs -tags bindata res/...
    go build -tags bindata  -o $app  ./
   
    show_version
}

function show_version() {
    ./$app -v
}

function pack() {
    build
    version=`./$app -v`
    file_list="cfg.yml $app"
    echo "...tar $app-$version.tar.gz <= $file_list"
    tar zcf $app-$version.tar.gz  $file_list
    md5sum $app-$version.tar.gz > $app-$version.tar.gz.md5
    mv $app-$version.tar.gz release/
    mv $app-$version.tar.gz.md5 release/
}

function packbin() {
    build
    version=`./$app -v`
    tar zcvf $app-bin-$version.tar.gz $app
}


function help() {
    echo "$0 build|pack|packbin|start|stop|restart|status|tail"
}

function release() {
    mkdir -p release/var
    go-bindata-assetfs -tags bindata res/...
    go build -tags bindata  -o release/$app  ./
    cp $conf release/
    cp control release
    echo done
}

if [ "$1" == "" ]; then
    help
elif [ "$1" == "stop" ];then
    stop
elif [ "$1" == "start" ];then
    start
elif [ "$1" == "restart" ];then
    restart
elif [ "$1" == "status" ];then
    status
elif [ "$1" == "tail" ];then
    tailf
elif [ "$1" == "build" ];then
    build
elif [ "$1" == "packbin" ];then
    packbin
elif [ "$1" == "pack" ];then
    pack
elif [ "$1" == "release" ];then
    release
else
    help
fi
